prices={'apple':30, 'milk':50}                                   # products = I think we need to use a dictonary into another dictionary
                                                                               #with description, seller, price and curr. Not sure
class Basket:
    def __init__(self):
        self.__value={}
        
    def add(self, desc, seller, price, curr):                     # def add(self, sku, qty):
        if price<0:                                               # self.__value[sku] = self.getBalance(sku) + qty
            raise ValueError
        self.__value[desc]=price + self.getBalance(desc)
        
    def remove(self, desc, seller, price, curr):                 # def remove(self, sku, qty):
        if price<0 or price>self.__value[desc]:                  # self.__value[sku] = self.getBalance(sku) - qty
            raise ValueError
        self.__value[desc]=self.getBalance(desc) - price
        
    def getBalance(self, desc):                                  # def getBalance(self, sku):
        if desc not in self.__value:                             # if sku not in self.__value:
            return 0                                             # return 0
        return self.__value[desc]                                # return self.__value[sku]
        
    def value(self):
        total=0
        for k,v in self.__value.items():
            total+=v*prices[k]
        return total
        
